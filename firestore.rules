service cloud.firestore {
  match /databases/{database}/documents {
    function getAccount(org) {
      return get(/databases/$(database)/documents/orgs/$(org)/accounts/$(request.auth.uid));
    }
    function isActiveAccount(org) {
      return getAccount(org).data.get('deletedAt', null) == null;
    }
    function isAdmin() {
      return request.auth.uid in get(/databases/$(database)/documents/service/admins).data.accounts;
    }
    function isManager(org) {
      return isActiveAccount(org) && getAccount(org).data.user in get(/databases/$(database)/documents/orgs/$(org)/groups/managers).data.users;
    }
    match /service/{doc} {
      allow read: if doc == "conf";
      allow read, update: if isAdmin();
    }
    match /orgs/{doc} {
      allow read: if true;
      allow read, write: if isAdmin();
    }
    match /orgs/{org}/accounts/{doc} {
      allow read, update: if request.auth.uid == doc;
      allow read, create, update: if isManager(org);
      allow delete: if request.auth.uid != doc && isManager(org);
    }
    match /orgs/{org}/users/{doc} {
      allow read: if isActiveAccount(org);
      allow read, update: if isActiveAccount(org) && getAccount(org).data.user == doc;
      allow read, create, update: if isManager(org);
      allow delete: if getAccount(org).data.user != doc && isManager(org);
    }
    match /orgs/{org}/groups/{doc} {
      allow read: if isActiveAccount(org);
      allow read, update: if doc == "managers" && isManager(org);
      allow read, write: if doc != "managers" && isManager(org);
    }
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
